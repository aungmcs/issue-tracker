{"version":3,"file":"server.293b8449ee624542b1a0.hot-update.js","mappings":"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","sources":["webpack://issue-tracker-ui/./src/IssueEdit.jsx","webpack://issue-tracker-ui/webpack/runtime/getFullHash"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport {\n  Col,\n  Panel,\n  Form,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  ButtonToolbar,\n  Button,\n  Alert,\n} from 'react-bootstrap';\nimport graphQLFetch from './graphQLFetch.js';\nimport NumInput from './NumInput.jsx';\nimport DateInput from './DateInput.jsx';\nimport TextInput from './TextInput.jsx';\nimport Toast from './Toast.jsx';\nimport store from './store.js';\nimport withToast from './withToast.jsx';\n\nclass IssueEdit extends React.Component {\n  static async fetchData(match, _, showError) {\n    const query = `query issue($id: Int!){\n            issue(id: $id){\n                id title status owner\n                effort created due description\n            }\n        }`;\n\n    const {\n      params: { id },\n    } = match;\n\n    const result = await graphQLFetch(query, { id: Number(id) }, showError);\n    return result;\n  }\n\n  constructor(props) {\n    super(props);\n\n    const issue = store.initialData ? store.initialData.issue : null;\n    delete store.initialData;\n\n    this.state = {\n      issue,\n      invalidFields: {},\n      showingValidation: false,\n    };\n    this.onChange = this.onChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onValidityChange = this.onValidityChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { issue } = this.state;\n    if (issue == null) {\n      this.loadData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      match: {\n        params: { id: prevId },\n      },\n    } = prevProps;\n\n    const {\n      match: {\n        params: { id },\n      },\n    } = this.props;\n\n    if (prevId !== id) {\n      this.loadData();\n    }\n  }\n\n  onValidityChange(e, valid) {\n    const { name } = e.target;\n    this.setState((prevState) => {\n      const invalidFields = { ...prevState.invalidFields, [name]: !valid };\n      if (valid) delete invalidFields[name];\n      return { invalidFields };\n    });\n  }\n\n  onChange(e, naturalValue) {\n    const { name, value: textValue } = e.target;\n    const value = naturalValue === undefined ? textValue : naturalValue;\n\n    this.setState(prevState => ({\n      issue: { ...prevState.issue, [name]: value },\n    }));\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    this.showValidation();\n    const { issue, invalidFields } = this.state;\n\n    // check validity of inputs before updating\n    if (Object.keys(invalidFields).length !== 0) return;\n\n    const query = `mutation issueUpdate($id: Int!,\n                        $changes: IssueUpdateInputs!){\n                        issueUpdate(id: $id, changes: $changes){\n                            id title status owner\n                            effort created due description\n                        }\n                    }`;\n\n    const { id, created, ...changes } = issue;\n    const {showError} = this.props;\n    const data = await graphQLFetch(query, { id, changes }, showError);\n    if (data) {\n      this.setState({ issue: data.issueUpdate });\n      this.showSuccess('Updated issue successfully');\n    }\n  }\n\n  async loadData() {\n    const { match } = this.props;\n    const data = await IssueEdit.fetchData(match, null, this.showError);\n    this.setState({ issue: data ? data.issue : {}, invalidFields: {} });\n  }\n\n  showValidation() {\n    this.setState({ showingValidation: true });\n  }\n\n  dismissValidation() {\n    this.setState({ showingValidation: false });\n  }\n\n  showSuccess(message) {\n    this.setState({\n      toastVisible: true,\n      toastMessage: message,\n      toastType: 'success',\n    });\n  }\n\n  showError(message) {\n    this.setState({\n      toastVisible: true,\n      toastMessage: message,\n      toastType: 'danger',\n    });\n  }\n\n  dismissToast() {\n    this.setState({ toastVisible: false });\n  }\n\n  render() {\n    const { issue } = this.state;\n    if (issue == null) return null;\n\n    const {\n      issue: { id },\n    } = this.state;\n\n    const {\n      match: {\n        params: { id: propsId },\n      },\n    } = this.props;\n\n    if (id == null) {\n      if (propsId != null) {\n        return <h2>{`Issue with ID: ${propsId} not found.`}</h2>;\n      }\n      return null;\n    }\n\n    const { toastVisible, toastMessage, toastType } = this.state;\n\n    const { invalidFields, showingValidation } = this.state;\n\n    let validationMessage;\n\n    if (Object.keys(invalidFields).length !== 0 && showingValidation) {\n      validationMessage = (\n        <Alert bsStyle=\"danger\" onDismiss={this.dismissValidation}>\n          Please correct invalid fields before submitting\n        </Alert>\n      );\n    }\n\n    return (\n      <Panel>\n        <Panel.Heading>\n          <Panel.Title>{`Editing issue: ${id}`}</Panel.Title>\n        </Panel.Heading>\n        <Panel.Body>\n          <Form horizontal onSubmit={this.handleSubmit}>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>\n                Created\n              </Col>\n              <Col sm={9}>\n                <FormControl.Static>\n                  {issue.created.toDateString()}\n                </FormControl.Static>\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>\n                Status\n              </Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass=\"select\"\n                  name=\"status\"\n                  value={issue.status}\n                  onChange={this.onChange}\n                >\n                  <option value=\"New\">New</option>\n                  <option value=\"Assigned\">Assigned</option>\n                  <option value=\"Fixed\">Fixed</option>\n                  <option value=\"Closed\">Closed</option>\n                </FormControl>\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>\n                Owner\n              </Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={TextInput}\n                  name=\"owner\"\n                  value={issue.owner}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>\n                Effort\n              </Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={NumInput}\n                  name=\"effort\"\n                  value={issue.effort}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup validationState={invalidFields.due ? 'error' : null}>\n              <Col componentClass={ControlLabel} sm={3}>\n                Due\n              </Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={DateInput}\n                  onValidityChange={this.onValidityChange}\n                  name=\"due\"\n                  value={issue.due}\n                  onChange={this.onChange}\n                  key={id}\n                />\n                <FormControl.Feedback />\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>\n                Title\n              </Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={TextInput}\n                  size={50}\n                  name=\"title\"\n                  value={issue.title}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>\n                Description\n              </Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={TextInput}\n                  tag=\"textarea\"\n                  rows={4}\n                  cols={50}\n                  name=\"description\"\n                  value={issue.description}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col smOffset={3} sm={6}>\n                <ButtonToolbar>\n                  <Button bsStyle=\"primary\" type=\"submit\">\n                    Submit\n                  </Button>\n                  <LinkContainer to=\"/issues\">\n                    <Button bsStyle=\"link\">Back</Button>\n                  </LinkContainer>\n                </ButtonToolbar>\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col smOffset={3} sm={9}>\n                {validationMessage}\n              </Col>\n            </FormGroup>\n          </Form>\n        </Panel.Body>\n        <Panel.Footer>\n          <Link to={`/edit/${id - 1}`}>Prev</Link>\n          {' | '}\n          <Link to={`/edit/${id + 1}`}>Next</Link>\n        </Panel.Footer>\n        <Toast\n          showing={toastVisible}\n          onDismiss={this.dismissToast}\n          bsStyle={toastType}\n        >\n          {toastMessage}\n        </Toast>\n      </Panel>\n    );\n  }\n}\n\nconst IssueEditWithToast = withToast(IssueEdit);\nIssueEditWithToast.fetchData = IssueEdit.fetchData;\n\nexport default IssueEditWithToast;\n","__webpack_require__.h = () => (\"15afe2cf1c16e2f1c481\")"],"names":["React","Link","LinkContainer","Col","Panel","Form","FormGroup","FormControl","ControlLabel","ButtonToolbar","Button","Alert","graphQLFetch","NumInput","DateInput","TextInput","Toast","store","withToast","IssueEdit","Component","fetchData","match","_","showError","query","params","id","result","Number","constructor","props","issue","initialData","state","invalidFields","showingValidation","onChange","bind","handleSubmit","onValidityChange","componentDidMount","loadData","componentDidUpdate","prevProps","prevId","e","valid","name","target","setState","prevState","naturalValue","value","textValue","undefined","preventDefault","showValidation","Object","keys","length","created","changes","data","issueUpdate","showSuccess","dismissValidation","message","toastVisible","toastMessage","toastType","dismissToast","render","propsId","validationMessage","toDateString","status","owner","effort","due","title","description","IssueEditWithToast"],"sourceRoot":""}