{"version":3,"file":"server.b707a5138b5ac81af1a5.hot-update.js","mappings":"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","sources":["webpack://issue-tracker-ui/./src/IssueList.jsx","webpack://issue-tracker-ui/webpack/runtime/getFullHash"],"sourcesContent":["import React from 'react';\n\nimport 'url-search-params-polyfill';\nimport { Panel } from 'react-bootstrap';\nimport IssueFilter from './IssueFilter.jsx';\nimport IssueTable from './IssueTable.jsx';\nimport IssueDetail from './IssueDetail.jsx';\nimport graphQLFetch from './graphQLFetch.js';\nimport store from './store.js';\nimport withToast from './withToast.jsx';\n\nclass IssueList extends React.Component {\n  static async fetchData(match, search, showError) {\n    const params = new URLSearchParams(search);\n    const vars = { hasSelection: false, selectedId: 0 };\n\n    const {\n      params: { id },\n    } = match;\n\n    const idInt = parseInt(id, 10);\n\n    if (!Number.isNaN(idInt)) {\n      vars.hasSelection = true;\n      vars.selectedId = idInt;\n    }\n\n    if (params.get('status')) vars.status = params.get('status');\n\n    const effortMin = parseInt(params.get('effortMin'), 10);\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\n\n    const effortMax = parseInt(params.get('effortMax'), 10);\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\n\n    const query = `query issueList(\n                     $status: StatusType,\n                     $effortMin: Int,\n                     $effortMax: Int,\n                     $hasSelection: Boolean!,\n                     $selectedId: Int!\n                     ){\n                      issueList(\n                        status: $status,\n                        effortMin: $effortMin,\n                        effortMax: $effortMax\n                        ){\n                         id title\n                         status owner\n                         created effort due\n                         }\n                      issue(id: $selectedId) @include (if: $hasSelection){\n                        id description\n                      }\n                    }`;\n\n    const data = await graphQLFetch(query, vars, showError);\n    return data;\n  }\n\n  constructor(props) {\n    super(props);\n    const issues = store.initialData ? store.initialData.issues : null;\n    const selectedIssue = store.initialData ? store.initialData.issue : null;\n    delete store.initialData;\n    this.state = {\n      issues,\n      selectedIssue,\n    };\n    this.closeIssue = this.closeIssue.bind(this);\n    this.deleteIssue = this.deleteIssue.bind(this);\n  }\n\n  componentDidMount() {\n    const { issues } = this.state;\n    if (issues == null) this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    // to update state on url change for filtering\n    const {\n      location: { prevSearch },\n      match: {\n        params: { id: prevId },\n      },\n    } = prevProps;\n\n    const {\n      location: { search },\n      match: {\n        params: { id },\n      },\n    } = this.props;\n\n    if (prevSearch !== search || prevId !== id) {\n      this.loadData();\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({});\n  }\n\n  async closeIssue(index) {\n    const { issues } = this.state;\n    const query = `mutation issueClose($id: Int!){\n                        issueUpdate(id: $id, changes: {status: Closed}){\n                            id title status owner\n                            effort created due description\n                        }\n                   }`;\n\n    const { showError } = this.props;\n    const data = await graphQLFetch(query, { id: issues[index].id }, showError);\n    if (data) {\n      this.setState((prevState) => {\n        const newList = [...prevState.issues];\n        newList[index] = data.issueUpdate;\n        return { issues: newList };\n      });\n      const { showSuccess } = this.props;\n      showSuccess('Successfully closed the issue');\n    }\n  }\n\n  async deleteIssue(index) {\n    const query = `mutation issueDelete($id: Int!){\n                        issueDelete(id: $id)\n                    }`;\n\n    const { issues } = this.state;\n\n    const {\n      location: { pathname, search },\n      history,\n    } = this.props;\n\n    const { id } = issues[index];\n\n    const { showError } = this.props;\n    const data = await graphQLFetch(query, { id: Number(id) }, showError);\n\n    if (data && data.issueDelete) {\n      this.setState((prevState) => {\n        const newList = [...prevState.issues];\n        // if in selection mode\n        if (pathname === `/issues/${id}`) {\n          history.push({ pathname: '/issues', search });\n        }\n        newList.splice(index, 1);\n        return { issues: newList };\n      });\n\n      const { showSuccess } = this.props;\n      showSuccess(`Deleted issue ${id} successfully.`);\n    } else {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    /**\n     * Fetches list of issues from the database via API call.\n     * Updates the data state on the client side.\n     */\n    const {\n      location: { search },\n      match,\n    } = this.props;\n\n    const { showError } = this.props;\n    const data = await IssueList.fetchData(match, search, showError);\n\n    if (data) {\n      this.setState({ issues: data.issueList, selectedIssue: data.issue });\n    }\n  }\n\n  render() {\n    const { issues, selectedIssue } = this.state;\n    if (issues == null) return null;\n\n    return (\n      <React.Fragment>\n        <Panel>\n          <Panel.Heading>\n            <Panel.Title toggle>Filter</Panel.Title>\n          </Panel.Heading>\n          <Panel.Body collapsible>\n            <IssueFilter />\n          </Panel.Body>\n        </Panel>\n        <hr />\n        <IssueTable\n          issues={issues}\n          closeIssue={this.closeIssue}\n          deleteIssue={this.deleteIssue}\n        />\n        <IssueDetail issue={selectedIssue} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst IssueListWithToast = withToast(IssueList);\nIssueListWithToast.fetchData = IssueList.fetchData;\n\nexport default IssueListWithToast;\n","__webpack_require__.h = () => (\"163805403bec3278ca17\")"],"names":["React","Panel","IssueFilter","IssueTable","IssueDetail","graphQLFetch","store","withToast","IssueList","Component","fetchData","match","search","showError","params","URLSearchParams","vars","hasSelection","selectedId","id","idInt","parseInt","Number","isNaN","get","status","effortMin","effortMax","query","data","constructor","props","issues","initialData","selectedIssue","issue","state","closeIssue","bind","deleteIssue","componentDidMount","loadData","componentDidUpdate","prevProps","location","prevSearch","prevId","componentWillUnmount","setState","index","prevState","newList","issueUpdate","showSuccess","pathname","history","issueDelete","push","splice","issueList","render","IssueListWithToast"],"sourceRoot":""}